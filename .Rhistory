# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
user <- loadData("user")
View(user)
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
options(mysql = list(
"host" = "v2202104145393150207.luckysrv.de",
"port" = 3306,
"user" = "root",
"password" = "nzdpXjmJaeh^X*5k3u^G2quZ6H@N3P"
))
databaseName <- "Einweihungsfeier"
daten <- loadData(daten)
daten <- loadData("daten")
View(daten)
View(daten)
daten
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
runApp()
runApp()
runApp('Shiny/Einweihungsfeier')
length("home")
nchar("home")
runApp('Shiny/Einweihungsfeier')
nchar()
nchar("")
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp()
runApp()
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
header(daten)
daten
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
shiny::runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
daten
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
confirm
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
daten
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
shiny::runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
shiny::runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
library(tictoc)
library(scales)
library(grid)
library(ggplot2)
library(mise)
library(shiny)
library(shinyjs)
library(rdrop2)
library(stringi)
library(shinyWidgets)
library(shinydashboard)
library(shinyalert)
library(RMySQL)
options(mysql = list(
"host" = "v2202104145393150207.luckysrv.de",
"port" = 3306,
"user" = "root",
"password" = "nzdpXjmJaeh^X*5k3u^G2quZ6H@N3P"
))
databaseName <- "Einweihungsfeier"
saveData <- function(data, table) {
# Connect to the database
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password)
# Construct the update query by looping over the data fields
# Submit the update query and disconnect
# dbGetQuery(db, sprintf("DROP TABLE %s", table))
# dbGetQuery(db, query)
dbWriteTable(db, table, data, overwrite = T, row.names = F, col.names = T)
dbDisconnect(db)
}
loadData <- function(table) {
# Connect to the database
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password)
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", table)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
sleeping <- loadData("sleep_space")
sleeping
runApp('Shiny/Einweihungsfeier')
sleeping <- loadData("sleep_space")
sleeping
loadData <- function(table) {
# Connect to the database
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password,
encoding="utf-8")
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", table)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
sleeping <- loadData("sleep_space")
sleeping
loadData <- function(table) {
# Connect to the database
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password,
encoding="utf8")
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", table)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
sleeping <- loadData("sleep_space")
sleeping
convertToUTF16_df <- function(df){
output <- cbind(df[sapply(df, typeof) != "character"]
, list.cbind(apply(df[sapply(df, typeof) == "character"], 2, function(x){
return(lapply(x, function(y) unlist(iconv(y, from = "UTF-8", to = "UTF-16LE", toRaw = TRUE))))
}))
)[colnames(df)]
return(output)
}
saveData <- function(data, table) {
# Connect to the database
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password,
encoding="utf8")
# Construct the update query by looping over the data fields
# Submit the update query and disconnect
# dbGetQuery(db, sprintf("DROP TABLE %s", table))
# dbGetQuery(db, query)
dbWriteTable(convertToUTF16_df(db), table, data, overwrite = T, row.names = F, col.names = T)
dbDisconnect(db)
}
loadData <- function(table) {
# Connect to the database
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password,
encoding="utf8")
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", table)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
data <- convertToUTF16_df(data)
dbDisconnect(db)
data
}
sleeping <- loadData("sleep_space")
convertToUTF16_df <- function(df){
output <- cbind(df[sapply(df, typeof) != "character"],
list.cbind(apply(df[sapply(df, typeof) == "character"], 2, function(x){
return(lapply(x, function(y) unlist(iconv(y, from = "UTF-8", to = "UTF-16LE", toRaw = TRUE))))
}))
)[colnames(df)]
return(output)
}
sleeping <- loadData("sleep_space")
convertToUTF16 <- function(s){
lapply(s, function(x) unlist(iconv(x,from="UTF-8",to="UTF-16LE",toRaw=TRUE)))
}
sleeping <- loadData("sleep_space")
convertToUTF16 <- function(s){
lapply(s, function(x) unlist(iconv(x,from="UTF-8",to="UTF-16LE",toRaw=TRUE)))
}
saveData <- function(data, table) {
# Connect to the database
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password)
# Construct the update query by looping over the data fields
# Submit the update query and disconnect
# dbGetQuery(db, sprintf("DROP TABLE %s", table))
# dbGetQuery(db, query)
dbWriteTable(convertToUTF16(db), table, data, overwrite = T, row.names = F, col.names = T)
dbDisconnect(db)
}
loadData <- function(table) {
# Connect to the database
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password)
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", table)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
data <- convertToUTF16(data)
dbDisconnect(db)
data
}
sleeping <- loadData("sleep_space")
sleeping
convertToUTF16_df <- function(df){
output <- cbind(df[sapply(df, typeof) != "character"]
, list.cbind(apply(df[sapply(df, typeof) == "character"], 2, function(x){
return(lapply(x, function(y) {
if (Encoding(y)=="unknown") {
unlist(iconv(enc2utf8(y), from = "UTF-8", to = "UTF-16LE", toRaw = TRUE))
} else {
unlist(iconv(y, from = Encoding(y), to = "UTF-16LE", toRaw = TRUE))
}
}))
}))
)[colnames(df)]
return(output)
}
saveData <- function(data, table) {
# Connect to the database
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password)
# Construct the update query by looping over the data fields
# Submit the update query and disconnect
# dbGetQuery(db, sprintf("DROP TABLE %s", table))
# dbGetQuery(db, query)
dbWriteTable(convertToUTF16_df(db), table, data, overwrite = T, row.names = F, col.names = T)
dbDisconnect(db)
}
loadData <- function(table) {
# Connect to the database
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password)
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", table)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
data <- convertToUTF16_df(data)
dbDisconnect(db)
data
}
sleeping <- loadData("sleep_space")
saveData <- function(data, table) {
# Connect to the database
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password)
# Construct the update query by looping over the data fields
# Submit the update query and disconnect
# dbGetQuery(db, sprintf("DROP TABLE %s", table))
# dbGetQuery(db, query)
dbWriteTable(db, table, data, overwrite = T, row.names = F, col.names = T)
dbDisconnect(db)
}
loadData <- function(table) {
# Connect to the database
db <- dbConnect(MySQL(), dbname = databaseName, host = options()$mysql$host,
port = options()$mysql$port, user = options()$mysql$user,
password = options()$mysql$password)
# Construct the fetching query
query <- sprintf("SELECT * FROM %s", table)
# Submit the fetch query and disconnect
data <- dbGetQuery(db, query)
dbDisconnect(db)
data
}
sleeping <- loadData("sleep_space")
sleeping
Encoding(sleeping$bed)
Encoding(sleeping$bed)  "UTF-8"
Encoding(sleeping$bed) <- "UTF-8"
sleeping
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
shiny::runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
runApp()
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
shiny::runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
runApp('Shiny/Einweihungsfeier')
deployApp()
library(rsconnect)
deployApp()
getwd()
setwd("C:/Users/lukas/Documents/Shiny/Einweihungsfeier")
getwd()
deployApp()
deployApp()
deployApp()
deployApp()
deployApp()
